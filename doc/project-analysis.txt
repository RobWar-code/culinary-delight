Project2Analysis.txt

# Analysis for Project2 in the CI WebCourse

Contents

	Consideration One: XB-Promo Overview and Introduction to XBasic Programming Language
		Introduction - XBasic Project
		Strategy/Scope
			Scheduling Limitations 
			Deliverables and UCD 
	Re-analysis for New Project Idea
	culinary-delight Website Analysis
		Strategy/Content/Scope
			Content
		Structure
		Surface
			Fonts 
			Colour Scheme
		Javascript Structure and Components
		Credits

# Consideration One: XB-Promo Overview and Introduction to the XBasic Programming Language

## Introduction - XBasic Project

21/10/22
The background to this project is a requirement from the CI course
to produce an interactive website by no later than 10/12/22, which
is 48 man days. The mooted project is to promote and provide a
summary overview of the XBasic programming language and PDE, to
dovetail the CI requirement with a group interest.

The following is the workings-out of the project design.

## Strategy / Scope

### Scheduling Limitations (budget)
As only one person (myself) is permitted to work on this project
all real days are interpreted as man days. This provides the 
limitations within which the website is to be produced.

    Planning/Analysis       6
    JS Studies              8
    Gathering Data/images   7
    Coding                  9
    Debugging/Testing       5
    README notes            4
    Margin of Error         5
    External Events         6
    TOTAL                   48

### Deliverables and UCD
    The weakest link in the schedule is in coding days (9) which 
    really only allows for two or three website pages. So this section
    considers what can be usefully delivered to the user within
    that constraint.

    The primary features of the XBasic language are the provision
    of a PDE (Program Development Environment) and an interactive
    window designer (toolbox), so these things should certainly
    appear on the main page.

    It would also be good to show debugging features on the main
    page.

    In addition, contact details should be provided on the first
    page, along with an interest group registration. These two
    things can be made somewhat JS interactive.

    The second page should provide a more detailed view of the window
    design tool. This could be done using screenshot images which can
    be stepped forward or back through by the user, thereby fulfilling
    the CI interactive requirement and providing the user with handy
    information in assessing the product.

    If these works fit well within the time frame then a third, 
    debugging demonstration page, can be developed.

    An important question to consider is whether screenshots will
    show as legible on mobile screen?
    At 350px width it is unlikely that appropriate screenshots 
    will be adequately displayed. 

	So this project is suspended for the time being. Better to 
	design it for larger screens only, which would be in the
	target market anyway.

# Re-analysis for New Project Idea
	
	The following limitations apply:
		2 or 3 Pages
		Must adequately fit 350px but be suitably scalable to 1500px
		Must have JS interactive element(s)
		Should not breach the copyright rules


	The idea of presenting an interactive, possibly branching sequence
	of graphic images is probably a good idea to meet the third objective.
	To scale-up to 1500px, we either need at least a two section display
	that can be adjusted to two columns, or image(s) that are adequately
	scalable.

	Suppose that we decide on three image areas, if two are static and the
	middle one interactive, then we meet our criterion, we can arrange
	our static images one above the other for the 350px display.
	the third image should be adequately scalable from 350px to say 1000px
	to allow for an intermediate 2 column layout. So the third image
	should be pictorial.

	We can ask the question - what product/service/subject would be well-
	served by a sequence of graphics?

	One thing that springs to mind is a recipe for cooking, which could
	involve the use of text as well. This might consist of 9 or 10 image 
	steps which would be usefully presented with step-forward as well 
	as step-back.

	The first column could be an image of the raw materials with a text 
	introduction and the third being the final product dished-up.

	The second page could be a pudding to accompany the meal on the main
	page.

	We could call the site "culinary-delight"

	This sounds like a much more manageable project.

# culinary-delight Website Analysis

## Strategy/Content/Scope 

	Time limitations:

    Planning/Analysis       5
    JS Studies              8
    Gathering Data/images   7
    Coding                  10
    Debugging/Testing       5
    README notes            4
    Margin of Error         5
    External Events         6
    TOTAL                   48


					Calendar					Actual
	Complete Planning/Analysis 	Thu 27/10/22	29/10/22
	Complete Data Gathering		Thu 03/11/22	29/10/22
	Complete JS Studies			Fri 11/11/22	03/11/22
	Complete Coding				Mon	21/11/22
	Project Start Review		Tue 22/11/22
	Complete Debugging/Testing	Sun 27/11/22
	README Notes				Thu	01/12/22
	Mid-Project Review			Fri 02/12/22
	Margin
	End-Project Review			Thu	08/12/22
	Submit Project 2			Fri 09/12/22

### Content
	Page 1
		Introduction to culinary-delight
			General Image and text
		This Week's Menu article and pics
		Contact
		Credits
		Registration Details
		Comments
	
	Page 2
		Ingredients image and list
		Main Course Recipe Image loader
		Result Image

	Page 3
		Ingredients image and list
		Dessert Recipe Image loader
		Result Image


	If there is time at the end, allow for a starter as the second
	page.

## Structure/Skeleton
	See Also: balsamiq layouts doc/culinary-delight.bmpr

### Main Page
	The main page headline consists of a logo and the title text.
	The following line of the menu, which has the items
		Main
		Dessert
		HOME
	Possibly include Icons to the left of the items.

	The title image follows the header and maintains
	as the full width (max 1500px) and is about 350px high.
	This has a floating panel introducing the organisation
	
	The following section is the introduction and associated
	image. 

	The next section is an article about the week's menu
	and the main and dessert pics.
	Javascript is used to fetch the article and images.

	The next section is for registration and associated pic
		Allow for submission status

	The next section is for comments
		Allow for submission status

	The following section is for contact details
	
	The next section is for credits, these should be for the credits
	on this page.

	The footer has links to social media, a back to top button and 
	link to CSS check.


### Recipe Pages
	The two recipe pages are very similar, so they can be represented
	by a single HTML page, with data supplied from a javascript object.
	To allow for this the menu links should include relevant URL data.

	(For the recipe data objects see assets/js/recipe-data.js).

	The advantage of this approach is uniformity of design and ease
	of update with new recipes and combinations.

	The data consists of the following:

		Title Section Full-width, centred
			Recipe Finished Pic
			Course title (ie "WEEK 1 MAIN COURSE")
			Recipe title
			Recipe description
			Credits

		Recipe Section (three columns)
			Ingredients Image
			Ingredients list and Utensils (if any mentioned)
			Recipe Step loader
				Image(s)
				Text
				Slider Control
				Next and Previous Buttons

		Finished Product Section
			Image of the completed dish
			
## Surface

### Fonts
	The fonts should be easily readable for the purposes of instruction, but
	should also convey a somewhat arty flair to go with the subject matter.
	The google font Acme seems to fulfil this role. Since it is quite a bold
	font, a weight of about 300 should be used as default.

### Colour Scheme
	An easy on the eye colour scheme should be chosen for the site, a bluish
	turquoise seems appropriate for a cooking site. Headings can be picked-out
	in a deeper, with text changing to white if the depth of colour justifies it.

### Recipe Pages
	The recipe image/text div has a set of controls these are:
		slider
		left arrow (previous)
		right arrow (next)
		Plus comment - Read through all first
		Print recipe button
		
### Footer links
	The footer has a Back-to-Top button, links to social media and
	css check-off icon 

## Javascript Structure and Components
	Javascript is used on the site in the following situations:
		On the main page:
			file: main-page.js

			On Page loaded 
			Get the recipes article for the current week.
				displayMenuArticle()
					getMenuArticle()

			Registration form to display submitted following checks
			Allow for invalid values
				registrationSubmitted()

			Comments form to display submitted following checks
			Allow for invalid values
				commentsSubmitted()

			The events are the two submission events use the DOM loaded event to set these.

		On the recipe page:
			file: recipe-page.js

			Data loader to collect images and ingredients display data (select by URL parameters)
				URL reader etc.
				loadRecipe()
					readURL()
					set the menu underline attribute -setMenu()
					set the course title bar 
					set the recipe title
					set the recipe description
					set the recipe credits

					set the ingredients picture
					set the ingredients list - loadIngredientsList()
					set the utensils list - loadUtensilsList()
					set the recipe first image
					set the recipe final image
					set the slider range

			Next and Previous recipe image and text buttons
				nextRecipeStep()
					removeLastStepText()
					updateSlider()
				prevRecipeStep()
					removeLastStepText()
					updateSlider()
			Recipe image and text slider operation
				slideToRecipeStep()
			Recipe print-out option button operation
				printRecipe()

			Events:
				DOM loaded - set the other events and set-up the recipe data for the page
				prevButton click
				nextButton click
				slider input
				printRecipeButton click

## Credits
	Wikimedia - parsley sprig
	Apple Tarte Tatin recipe - courtesy CLASSIC Mary Berry
